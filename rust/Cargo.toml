[package]
name = "aetherion_engine"
version = "0.1.0"
edition = "2021"
build = "build.rs"

# A GDExtension library must be of this type
[lib]
crate-type = ["cdylib"]

[dependencies]
# Required for your `build_map` pipeline:
image = "0.25"
serde = { version = "1.0", features = ["derive"] }
bincode = "2.0"
crossbeam-channel = "0.5"

# Required for concurrent programming, linear algebra, etc.
rand = { version = "0.8.5", features = ["small_rng"] }
rayon = "1.10.0"
thiserror = "1.0"
glam = "0.30.5"
once_cell = "1.21.3"

# Godot-rust specific dependencies
godot = { path = "../../zv9.gdext/godot" }
godot-core = { path = "../../zv9.gdext/godot-core" }
godot-macros = { path = "../../zv9.gdext/godot-macros", optional = true }


[build-dependencies]
gdext-gen = "0.1.0"

[profile.dev]
opt-level = 1

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = "symbols"

# This entry is correct and tells Cargo to build your custom build script
[[bin]]
name = "sync_to_godot"
path = "src/bin/sync_to_godot.rs"

# The debugger binary was causing the error, as it was not found.
# If you want to use it as a standalone tool, you'll need to create
# that file at `src/bin/debugger.rs`.
# For now, it's safer to comment it out to get the project building.
# [[bin]]
# name = "debugger"
# path = "src/bin/debugger.rs"


[features]
default = []
macros = ["godot-macros"]

[alias]
build-sync = "build --release && run --bin sync_to_godot"
